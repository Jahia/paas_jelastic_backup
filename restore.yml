---
type: update
version: 1.5
name: Jahia - Restores an environment from a bucket
logo: /images/jahia-logo-70x70.png
id: jahia-restore-from-bucket
baseUrl: https://raw.githubusercontent.com/Jahia/paas_jelastic_backup


onInstall:
  - cmd [proc,cp]:
      - sudo yum install -y python36 python36-pip
      - python3 -m pip install boto3 --upgrade
      - if [ ! -d ~/.aws ]; then mkdir ~/.aws; fi
      - echo "[default]" > ~/.aws/credentials
      - echo "aws_access_key_id= ${settings.aws_access_key}" >> ~/.aws/credentials
      - echo "aws_secret_access_key = ${settings.aws_secret_key}" >> ~/.aws/credentials
      - echo "region= $(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST)" >> ~/.aws/credentials
      - if [ -d paas_jelastic_backup ]; then cd paas_jelastic_backup; git checkout ${settings.gitbranch}; git pull; git checkout tags/${settings.gittag}; echo; else git clone ${settings.gitrepo}; cd paas_jelastic_backup; git checkout ${settings.gitbranch}; git checkout tags/${settings.gittag}; echo; fi
      - service tomcat stop
  - cmd [proc,cp]:
      - cd paas_jelastic_backup
      - python3 backrest.py -a download --backupname ${settings.backup_name} --bucketname paas-${settings.env}-${env.uid}-${env.envName} -m ${settings.backtype} -t ${settings.timestamp} -f digital-factory-data.tar.gz
      - rm -rf /data
      - tar xf digital-factory-data.tar.gz -C /
      - chown tomcat:tomcat -R /data
      - rm digital-factory-data.tar.gz
  - cmd [proc,cp]:
      - cd paas_jelastic_backup
      - python3 backrest.py -a download --backupname ${settings.backup_name} --bucketname paas-${settings.env}-${env.uid}-${env.envName} -m ${settings.backtype} -t ${settings.timestamp} -f digital-factory-config.tar.gz
      - rm -rf /opt/tomcat/conf/conf/digital-factory-config
      - tar xf digital-factory-config.tar.gz -C /opt/tomcat/conf
      - chown tomcat:tomcat -R /opt/tomcat/conf
      - rm -f digital-factory-config.tar.gz
      - rm -f /data/digital-factory-data/repository/.lock
      - touch /data/digital-factory-data/safe-env-clone
      - chown tomcat:tomcat /data/digital-factory-data/safe-env-clone
      - sed -i "s|^cluster.node.serverId.*|cluster.node.serverId = $HOSTNAME|g" $STACK_PATH/conf/digital-factory-config/jahia/jahia.node.properties
  - cmd [cp]:
      - sed -i "s|^processingServer.*|processingServer = false|g" $STACK_PATH/conf/digital-factory-config/jahia/jahia.node.properties
  - cmd [proc]:
      - cd paas_jelastic_backup
      - python3 backrest.py -a download --backupname ${settings.backup_name} --bucketname paas-${settings.env}-${env.uid}-${env.envName} -m ${settings.backtype} -t ${settings.timestamp} -f jahia.sql.gz
      - gunzip < jahia.sql.gz | mysql -u$DB_USER -p$DB_PASSWORD -h mysqldb
      - rm -f jahia.sql.gz
  - cmd [proc,cp]:
      - service tomcat start

settings:
  fields:
    - name: backup_name
      type: string
      caption: Backup Name
      vtype: text
      required: true
    - name: aws_access_key
      type: string
      caption: AWS Access Key
      vtype: text
      required: true
    - name: aws_secret_key
      type: string
      caption: AWS Secret Key
      vtype: text
      required: true
    - name: gitrepo
      caption: backrest git repo url
      type: string
      default: https://github.com/Jahia/paas_jelastic_backup.git
      inputType: hidden
    - name: gitbranch
      caption: git repo branch to use
      default: wip_backrest
      type: string
      inputType: hidden
    - name: gittag
      caption: git tag branch to use
      default: v0.2
      type: string
      inputType: hidden
    - name: env
      type: string
      required: true
      default: prod
    - name: timestamp
      caption: timestamp in format %Y-%m-%dT%H:%M:00
      required: true
      type: string
    - name: backtype
      caption: is this a manual or auto backup
      type: string
      default: manual
