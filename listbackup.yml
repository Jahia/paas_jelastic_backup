---
type: update
version: 1.5
name: Jahia - List backup in bucket
logo: /images/jahia-logo-70x70.png
id: jahia-list-from-bucket

onInstall:
  - script: |-
      var url = "${baseUrl}".split('/');
      url.pop();
      branch = url.pop();
      url[2] = "github.com"; // Remove raw github domain
      return {result: 0, "branch": branch, "git-repos-url": url.join('/')};
  - setGlobals:
      branch: ${response.branch}
      git-repos-url: ${response.git-repos-url}
  - cmd [proc]:
      - sudo yum install -y python36 python36-pip
      - python3 -m pip install --upgrade pip
      - python3 -m pip install --upgrade boto3 azure adal
      - if [ ! -d ~/.aws ]; then mkdir ~/.aws; fi
      - echo "[default]" > ~/.aws/credentials
      - echo "aws_access_key_id= ${settings.aws_access_key}" >> ~/.aws/credentials
      - echo "aws_secret_access_key = ${settings.aws_secret_key}" >> ~/.aws/credentials
      - provider=$(awk -F'=' '$1=="JEL_CLOUDPROVIDER" {print $2}' /metadata_from_HOST); if [ "$provider" != "aws" ]; then aws_region='eu-west-1'; else aws_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST); fi; export aws_region
      - echo "region=$aws_region" >> ~/.aws/credentials
      - if [ -d paas_jelastic_backup ]; then cd paas_jelastic_backup; git fetch --tags --force; git checkout ${globals.branch}; git pull; echo; else git clone ${globals.git-repos-url}; cd paas_jelastic_backup; git checkout ${globals.branch}; echo; fi
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - python3 backrest.py -a list --bucketname jc${cluster_role}${env.uid}${env_region}
  - setGlobals:
      cmdOutput: ${response.out}
  - cmd [proc]:
      - rm /opt/tomcat/temp/.aws/credentials

success: ${globals.cmdOutput}

settings:
  fields:
    - name: aws_access_key
      type: string
      caption: AWS Access Key
      vtype: text
      required: true
    - name: aws_secret_key
      type: string
      caption: AWS Secret Key
      vtype: text
      required: true
    - name: env
      type: string
      required: true
      default: prod
