---
type: update
version: 1.5.2
name: Jahia Cloud - Control Scheduled backup
logo: /images/jahia-logo-70x70.png
id: jahia-cloud-control-scheduled-backup
description:
  short: Jahia Cloud - Control Scheduled backup
  text: This package is use to interact with the auto_backup.yml node.
baseUrl: https://github.com/Jahia/paas_jelastic_backup/raw/master
ssl: true
skipNodeEmails: true

globals:
  baseApiUrl: http://localhost:8080/api
  backupUrl: ${baseUrl}/backup.yml
  httpHeader: 'Content-Type: application/json'

onInstall:
  - initVars
  - launchCurl: cp

actions:
  initVars:
    - if('${settings.action}' == 'list'):
        setGlobals:
          urlApi: ${globals.baseApiUrl}/listcronjobs
          httpMethod: GET
    - if('${settings.action}' != 'list'):
        - script: |-
            var diso = new Date()
            var m = diso.getMonth() + 1
            var H = diso.getHours()
            var M = diso.getMinutes()
            var d = diso.getDay()
            if(m.toString().length != 2) {m = "0" + m}
            if(H.toString().length != 2) {H = "0" + H}
            if(M.toString().length != 2) {M = "0" + M}
            if(d.toString().length != 2) {d = "0" + d}
            var timestamp = diso.getFullYear() + "-" + m + "-" + d + "T" + H + ":" + M + ":00"

            var settings = {
              "backtype": "auto",
              "retention": "${settings.retention}",
              "aws_access_key": "${AWS_ACCESS_KEY}",
              "aws_secret_key": "${AWS_SECRET_KEY}",
              "backup_name": "${settings.backup_name}",
              "timestamp": timestamp
            }

            var data = {
              "schedule": "${settings.schedule}",
              "uid": "${settings.uid}",
              "envname": "${settings.envname}",
              "url": "${globals.backupUrl}",
              "settings": settings,
              "sudo": "${settings.sudo}",
              "region": "${settings.region}"
            }

            return {'result': 0, 'data': String(data)}
        - setGlobals:
            data: ${response.data}
            urlApi: ${globals.baseApiUrl}/cronjob
        - if('${settings.action}' == 'add'):
            setGlobals:
              httpMethod: POST
        - if('${settings.action}' == 'del'):
            setGlobals:
              httpMethod: DELETE
  launchCurl:
    - cmd[${this}]: |-
        curl -s -X ${globals.httpMethod} -H '${globals.httpHeader}' '${globals.urlApi}' -d '${globals.data}'

settings:
  fields:
    - name: action
      caption: action
      type: radio-fieldset
      values:
        list: list backup
        add: add backup
        del: remove backup
      required: true
      showIf:
        add:
          - name: schedule
            caption: cron style schedule
            type: string
            required: true
          - name: envname
            caption: targeted envname
            type: string
            required: true
          - name: region
            caption: targeted envname's region
            type: string
            required: true
          - name: sudo
            caption: envname's owner email
            type: string
            required: true
          - name: uid
            caption: envname's owner UID
            type: string
            required: true
          - name: backup_name
            caption: backup name
            type: string
            required: true
          - name: retention
            caption: how many backup do we keep
            type: string
        del:
          - name: envname
            caption: targeted envname
            type: string
            required: true
