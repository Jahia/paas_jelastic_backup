type: update
version: 1.5
name: Backup for Jahia DEM
logo: /images/jahia-backup-logo-70x70.png
id: jahia-dx-backup-7302
description: Backup for Jahia - Digital Experience Manager
baseUrl: https://raw.githubusercontent.com/Jahia/jelastic-package-dev/master/dx7302

targetNodes:
  nodeGroup: cp

onBeforeInit: |
  var resp = jelastic.development.scripting.Eval(appid + "/settings", session, "GetSettings", { settings : "JAHIA_STORAGE_FTP_HOST" });
  resp = resp.response || resp;
  var ftpHost = resp.settings.JAHIA_STORAGE_FTP_HOST;

  if (resp.result === 0) {
    ftpHost = resp.settings.JAHIA_STORAGE_FTP_HOST || "";
  }

  return {
    result : 0,
    settings : {
      "fields": [{
        "name": "cronTime",
        "caption": "Backup schedule",
        "type": "list",
        "editable": true,
        "values": {
          "0 6 1/1 * *": "0 6 1/1 * *",
          "*/30 * * * *": "*/30 * * * *",
          "0 */1 * * *": "0 */1 * * *",
          "0 */4 * * *": "0 */4 * * *",
          "0 */6 * * *": "0 */6 * * *",
          "0 */12 * * *": "0 */12 * * *",
          "0 6 1/7 * *": "0 6 1/7 * *"
        },
        "default": "0 */12 * * *",
        "regexText": "Cron syntax is incorrect!",
        "regex": "^(((([\\\\*]{1}){1,})|((\\\\*\\\\\\/){0,1}(([0-9\\/\\*\\-\\,]{1}){1,}|(([1-5]{1}){1}([0-9\\/\\*\\-\\,]{1}){1,}){1}))) ((([\\\\*]{1}){1,})|((\\\\*\\\\\\/){0,1}(([0-9\\/\\*\\-\\,]{1}){1,}|(([1]{1}){1}([0-9\\/\\*\\-\\,-]{1}){1,}){1}|([2]{1}){1}([0-3]{1}){1}))) ((([\\\\*]{1}){1})|((\\\\*\\\\\\/){0,1}(([1-9]{1}){1}|(([1-2]{1}){1}([0-9\\/\\*\\-\\,]{1}){1,5}){1}|([3]{1}){1}([0-1]{1}){1}))) ((([\\\\*]{1}){1})|((\\\\*\\\\\\/){0,1}(([1-9]{1}){1}|(([1-2]{1}){1}([0-9\\/\\*\\-\\,]{1}){1,}){1}|([3]{1}){1}([0-1]{1}){1}))|(jan|feb|mar|apr|may|jun|jul|aug|sep|okt|nov|dec)(-?\\w+?)?) ((([\\\\*]{1}){1})|((\\\\*\\\\\\/){0,1}(([0-7]{1,}(-?[0-7]?(,[0-7]){0,6})){1}))|((sun|mon|tue|wed|thu|fri|sat)?(,(sun|mon|tue|wed|thu|fri|sat)){0,6})(-?\\w+?)?))$"
      }, {
        "type": "spinner",
        "name": "backupCount",
        "caption": "N of stored backups",
        "min": 1,
        "max": 10,
        "default": 5
      }, {
        "type": "string",
        "name": "ftpHost",
        "default": ftpHost || "",
        "caption": "FTP Host",
        "inputType": "hidden"
      }]
    }
  };

buttons:
- caption: Backup Now
  action: backup
  loadingText: Backing up...
  confirmText: Are you you want to initiate the backup process?
  successText: The backup process has been finished successfully.

- caption: Configure
  action: configure
  settings: main
  loadingText: Configuring...
  successText: The backup configs have been updated successfully.

globals:
  scriptSufix: jahia-backup

onInstall:
- installFTPClient
- installScript:
    cronTime: ${settings.cronTime}
    backupCount: ${settings.backupCount}
    ftpHost: ${settings.ftpHost}

onUninstall:
  callScript: uninstall

startPage: ${env.url}

actions:
  installFTPClient:
    cmd [proc, es]: yum -y install lftp

  installScript:
    script: ${baseUrl}/backup/scripts/create-backup-main-script.js?_r=${fn.random}
    params:
      scriptName: ${env.envName}-${globals.scriptSufix}
      baseUrl: ${baseUrl}
      cronTime: ${this.cronTime}
      backupCount: ${this.backupCount}
      ftpHost: ${this.ftpHost}

  callScript:
    script: |-
      var resp = jelastic.dev.scripting.Eval(appid, session, '${env.envName}-${globals.scriptSufix}', {action:"${this}"})
      return resp.response || resp;

  backup:
    callScript: backup

  configure:
    - callScript: get-credentials
    - installScript:
        ftpUser: ${response.ftpUser}
        ftpPassword: ${response.ftpPassword}
        cronTime: ${this.cronTime}
        backupCount: ${this.backupCount}
        ftpHost: ${this.ftpHost}
