---
type: update
version: 1.5
name: Jahia - Snapshots an environment and stores it in the appropriate object storage
logo: /images/jahia-logo-70x70.png
id: jahia-backup-to-bucket
baseUrl: https://raw.githubusercontent.com/Jahia/paas_jelastic_backup

globals:
  timestamp: ${settings.timestamp}
  argTimestamp: '-t "${globals.timestamp}"'

onInstall:
  - if('${globals.timestamp}' == ''):
      - setTimestamp
  - cmd [proc]:
      - sudo yum install -y python36 python36-pip
      - sudo python3 -m pip install --upgrade pip
      - sudo python3 -m pip install --upgrade boto3 azure adal
      - if [ ! -d ~/.aws ]; then mkdir ~/.aws; fi
      - echo "[default]" > ~/.aws/credentials
      - echo "aws_access_key_id= ${settings.aws_access_key}" >> ~/.aws/credentials
      - echo "aws_secret_access_key = ${settings.aws_secret_key}" >> ~/.aws/credentials
      - provider=$(awk -F'=' '$1=="JEL_CLOUDPROVIDER" {print $2}' /metadata_from_HOST); if [ "$provider" != "aws" ]; then aws_region='eu-west-1'; else aws_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST); fi; export aws_region
      - echo "region=$aws_region" >> ~/.aws/credentials
      - if [ -d paas_jelastic_backup ]; then rm -fr paas_jelastic_backup; fi; git clone ${settings.gitrepo}; cd paas_jelastic_backup; git checkout ${settings.gitbranch}; git checkout tags/${settings.gittag}; echo
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - tar -czvf digital-factory-data.tar.gz /data/digital-factory-data/
      - python3 backrest.py -a upload --bucketname jc${cluster_role}${env.uid}${env_region} --backupname ${settings.backup_name} -f digital-factory-data.tar.gz ${globals.argTimestamp} -m ${settings.backtype}
      - rm -f digital-factory-data.tar.gz
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - case ${DB_ENDPOINT} in "mysqldb") mysql_host="mysqldb" ;; "proxy") mysql_host=${PROXYSQL_MASTER_IP} ;; "galera") mysql_host="galera";; *) mysql_host="mysqldb"; esac
      - mysqldump --hex-blob --user=$DB_USER --password=$DB_PASSWORD -h ${mysql_host} --single-transaction --max_allowed_packet=1024M --quote-names --opt --databases --compress jahia | gzip > jahia.sql.gz
      - python3 backrest.py -a upload --bucketname jc${cluster_role}${env.uid}${env_region} --backupname ${settings.backup_name} -f jahia.sql.gz ${globals.argTimestamp} -m ${settings.backtype}
      - rm -f jahia.sql.gz
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - tar -czvf digital-factory-config.tar.gz /opt/tomcat/conf/digital-factory-config/
      - python3 backrest.py -a upload --bucketname jc${cluster_role}${env.uid}${env_region} --backupname ${settings.backup_name} -f digital-factory-config.tar.gz ${globals.argTimestamp} -m ${settings.backtype}
      - rm -f digital-factory-config.tar.gz
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - python3 backrest.py -a addmeta --bucketname jc${cluster_role}${env.uid}${env_region} --backupname ${settings.backup_name} ${globals.argTimestamp} -m ${settings.backtype} --displayname '${env.displayName}'
  - cmd [proc]:
      - cluster_role=$(awk -F'=' '$1=="JEL_ENV_ROLE" {print $2}' /metadata_from_HOST); export cluster_role
      - env_region=$(awk -F'=' '$1=="JEL_REGION" {print $2}' /metadata_from_HOST | sed 's/[[:punct:]]//g'); export env_region
      - cd paas_jelastic_backup
      - python3 backrest.py -a rotate --bucketname jc${cluster_role}${env.uid}${env_region} --backupname ${settings.backup_name} ${globals.argTimestamp} -m ${settings.backtype} -k ${settings.retention}


actions:
  setTimestamp:
    - script: |
          var diso = new Date()
          var m = diso.getMonth() + 1
          var H = diso.getHours()
          var M = diso.getMinutes()
          var d = diso.getDate()
          if(m.toString().length != 2) {m = "0" + m}
          if(H.toString().length != 2) {H = "0" + H}
          if(M.toString().length != 2) {M = "0" + M}
          if(d.toString().length != 2) {d = "0" + d}
          var timestamp = diso.getFullYear() + "-" + m + "-" + d + "T" + H + ":" + M + ":00"
          return {'result': 0, 'timestamp': timestamp}
    - setGlobals:
        timestamp: ${response.timestamp}
        argTimestamp: '-t "${response.timestamp}"'


settings:
  fields:
    - name: backup_name
      type: string
      caption: Backup Name
      vtype: text
      required: true
    - name: aws_access_key
      type: string
      caption: AWS Access Key
      vtype: text
      required: true
    - name: aws_secret_key
      type: string
      caption: AWS Secret Key
      vtype: text
      required: true
    - name: gitrepo
      caption: backrest git repo url
      type: string
      default: https://github.com/Jahia/paas_jelastic_backup.git
      inputType: hidden
    - name: gitbranch
      caption: git repo branch to use
      default: master
      type: string
      inputType: hidden
    - name: gittag
      caption: git tag branch to use
      default: v1.2
      type: string
      inputType: hidden
    - name: env
      type: string
      required: true
      default: prod
    - name: timestamp
      caption: timestamp in format %Y-%m-%dT%H:%M:00
      required: false
      type: string
    - name: retention
      caption: how many backup do you want to keep
      type: string
      default: 15
    - name: backtype
      caption: is this a manual or auto backup
      type: string
      default: manual
